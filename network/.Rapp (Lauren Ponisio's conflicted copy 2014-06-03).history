rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.2)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.2)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
rmelink <- function(n, la, X0) {#
	xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')#
#
# # #
# x <- rpois(2000, 1)#
# plot(my.ecdf(x))#
# lines(0:50, ppois(0:50, 1), col='red')
100000
100000/2000
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, 0.4))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, 0.4))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:100, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
	browser()#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.5, 100)
plot(xy)
lines(dmelink(1:X0, la), col='red')
Q
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.25, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.25), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.05), col='red')
x <- rmelink(2000, 5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 5), col='red')
x
x <- rmelink(2000, 2, 100)
x
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	browser()#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)
x
length(x)
probs <- seq(dmelink(1, la)*1.1, dmelink(1, la)*10, length=X0)
plot(probs)
probs <- seq(dmelink(1, la)*1.1, dmelink(X0, la)*10, length=X0)
plot(probs)
probs
min.prob <- dmelink(X0, la)*10
min.prob
plot(dmelink(1:X0, la))
plot(dmelink(1:X0, la), log='y')
abline(h=0.5*dmelink(1, la))
abline(h=0.1*dmelink(1, la))
abline(h=0.01*dmelink(1, la))
abline(h=0.001*dmelink(1, la))
abline(h=0.00001*dmelink(1, la))
abline(h=0.000001*dmelink(1, la))
abline(h=0.00000001*dmelink(1, la))
0.00000001
plot(dmelink(1:X0, la), log='y')#
	abline(h=1e-08*dmelink(1, la))
min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-08*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	plot(probs)
probs
min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	plot(probs)
probs
xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])
plot(xtemp, ytemp)
plot(xtemp, ytemp, log='y')
Q
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.1, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 2, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 2), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.5, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.5), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, 0.05), col='red')
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}
melink.mle(x)
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	xtemp <- sample(1:X0, n*10, rep=TRUE, prob=probs)#
	ytemp <- runif(n*10, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
# xy <- cbind(sample(1:100, 100000, rep=TRUE), runif(100000, 0, 0.4))#
# x <- xy[dmelink(xy[, 1], 0.5) >= xy[, 2], 1]#
#
x <- rmelink(2000, 0.05, 100)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:100, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}
melink.mle(x)
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	browser()#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}
melink.mle(x)
melink.logLik(x)
length(x) * log(1 - exp(-la)) - la * sum(x - 1)
melink.logLik(x) == sum(log(dmelink(x, melink.mle(x))))
Q
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) == sum(log(dmelink(x, melink.mle(x))))
melink.logLik(x)
sum(log(dmelink(x, melink.mle(x))))
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x))))
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.05, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.5, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	extraN <- 40#
	xtemp <- sample(1:X0, n* extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n* extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	extraN <- 40#
	xtemp <- sample(1:X0, n* extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n* extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <- 80#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <- 80#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <- 80#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <- 80#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <- 80#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
curve(exp(0.01*x))
curve(exp(0.01*x), from=0.001, to=2)
curve(exp(1*x), from=0.001, to=2)
curve(exp(10*x), from=0.001, to=2)
curve(exp(4*x), from=0.001, to=2)
curve(exp(2*x), from=0.001, to=2)
curve(exp(2*x)+10, from=0.001, to=2)
curve(exp(2.4*x)+10, from=0.001, to=2)
curve(exp(2.6*x)+10, from=0.001, to=2)
exp(2.6*2)+10
exp(2.6*0.0001)+10
curve(exp(2.65*x)+10, from=0.001, to=2)
d, p and r functions for the maxent link distribution#
## also a funciton to calculate the MLE and log likelihood#
#
dmelink <- function(x, la) {#
	exp(-la*(x-1)) - exp(-la*x)#
}#
#
pmelink <- function(x, la) {#
	if(length(x) > 1) {#
		sapply(x, function(q) sum(dmelink(1:q, la)))#
	} else {#
		sum(dmelink(1:x, la))#
	}#
}#
#
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <-round(exp(2.65*la)) + 10#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
x <- rmelink(2000, 2, 200)#
length(x)#
plot(my.ecdf(x))#
lines(pmelink(1:200, melink.mle(x)), col='red')#
melink.logLik(x) - sum(log(dmelink(x, melink.mle(x)))) < 1e-12
x <- rmelink(2000, 0.2, 200)
length(x)
x <- rmelink(2000, 0.002, 200)
length(x)
La <- seq(0.001, 2, length=20)
La <- seq(0.001, 2, length=20)
x <- sapply(La, function(la) length(rmelink(2000, la, 200)))
x
plot(La, x)
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <-round(100*la) + 10#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
La <- seq(0.001, 2, length=20)#
x <- sapply(La, function(la) length(rmelink(2000, la, 200)))
plot(La, x)
rmelink <- function(n, la, X0) {#
	# xtemp <- sample(1:X0, round(1.5*n), rep=TRUE, prob=dexp(1:X0, la)*1.1)#
	# ytemp <- runif(round(1.5*n), 0, dexp(xtemp)*1.1)#
	# x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	# xy <- cbind(sample(1:X0, n*50, rep=TRUE), runif(n*50, 0, dmelink(1, la)*1.1))#
	# x <- xy[dmelink(xy[, 1], la) >= xy[, 2], 1]#
	min.prob <- dmelink(X0, la)*10#
	if(min.prob < 1e-08*dmelink(1, la)) min.prob <- 1e-04*dmelink(1, la)#
	probs <- seq(dmelink(1, la)*1.5, min.prob, length=X0)#
	## extra sampling needed to hit n total#
	extraN <-round(100*la) + 20#
	xtemp <- sample(1:X0, n * extraN, rep=TRUE, prob=probs)#
	ytemp <- runif(n * extraN, 0, probs[xtemp])#
	x <- xtemp[dmelink(xtemp, la) >= ytemp]#
	if(length(x) > n) return(x[1:n])#
	else return(x)#
}#
## likelihood functions#
melink.mle <- function(x) {#
	log(1 + 1 / mean(x - 1))#
}#
#
melink.logLik <- function(x) {#
	la <- melink.mle(x)#
	length(x) * log(1 - exp(-la)) - la * sum(x - 1)#
}#
## test it#
La <- seq(0.001, 2, length=20)#
x <- sapply(La, function(la) length(rmelink(2000, la, 200)))#
plot(La, x)
La <- seq(0.001, 2, length=20)#
x <- sapply(La, function(la) length(rmelink(2000, la, 200)))#
plot(La, x)
La <- seq(0.001, 2, length=20)#
x <- sapply(La, function(la) length(rmelink(2000, la, 200)))#
plot(La, x)
